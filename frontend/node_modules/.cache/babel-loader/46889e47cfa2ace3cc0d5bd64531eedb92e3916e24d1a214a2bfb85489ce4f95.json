{"ast":null,"code":"var _jsxFileName = \"/home/manasa/Projects/Assessment/automations_technical_assessment/integrations_technical_assessment/frontend/src/integrations/HubSpotIntegration.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Box, Button, CircularProgress } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HUBSPOT_CLIENT_ID = \"2a2b7459-db80-418e-9fc4-9961fc07c203\";\nconst REDIRECT_URI = \"http://localhost:8000/integrations/hubspot/callback\";\nexport const HubSpotIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  // Function to open OAuth authorization page\n  const handleConnectClick = () => {\n    const authUrl = `https://app.hubspot.com/oauth/authorize?client_id=${HUBSPOT_CLIENT_ID}&redirect_uri=${encodeURIComponent(REDIRECT_URI)}&scope=crm.objects.contacts.read%20crm.objects.contacts.write%20oauth`;\n    window.location.href = authUrl;\n  };\n\n  // Function to retrieve credentials after authentication\n  const handleWindowClosed = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"user_id\", user);\n      formData.append(\"org_id\", org);\n      const response = await axios.post(\"http://localhost:8000/integrations/hubspot/credentials\", formData);\n      const credentials = response.data;\n      if (credentials !== null && credentials !== void 0 && credentials.access_token) {\n        localStorage.setItem(\"hubspot_token\", credentials.access_token); // Store token\n        setIsConnected(true);\n        setIntegrationParams(prev => ({\n          ...prev,\n          credentials: credentials,\n          type: \"HubSpot\"\n        }));\n      }\n    } catch (e) {\n      var _e$response, _e$response$data;\n      alert((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail) || \"Failed to retrieve HubSpot credentials\");\n    }\n  };\n\n  // Function to fetch HubSpot contacts\n  const fetchHubSpotContacts = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:8000/integrations/hubspot/items\", {\n        user,\n        org\n      });\n      console.log(\"HubSpot Contacts:\", response.data);\n    } catch (error) {\n      alert(\"Failed to fetch contacts. Please try again.\");\n    }\n  };\n  useEffect(() => {\n    setIsConnected(!!(integrationParams !== null && integrationParams !== void 0 && integrationParams.credentials));\n  }, [integrationParams]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: [\"Parameters\", /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: isConnected ? undefined : handleConnectClick,\n        color: isConnected ? \"success\" : \"primary\",\n        disabled: isConnecting,\n        style: {\n          pointerEvents: isConnected ? \"none\" : \"auto\",\n          cursor: isConnected ? \"default\" : \"pointer\",\n          opacity: isConnected ? 1 : undefined\n        },\n        children: isConnected ? \"HubSpot Connected\" : isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 73\n        }, this) : \"Connect to HubSpot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), isConnected && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        sx: {\n          ml: 2\n        },\n        onClick: fetchHubSpotContacts,\n        children: \"Fetch HubSpot Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(HubSpotIntegration, \"YVzh0k4rAm9dKRmEfKk5oscD40o=\");\n_c = HubSpotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubSpotIntegration\");","map":{"version":3,"names":["useState","useEffect","Box","Button","CircularProgress","axios","jsxDEV","_jsxDEV","HUBSPOT_CLIENT_ID","REDIRECT_URI","HubSpotIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","handleConnectClick","authUrl","encodeURIComponent","window","location","href","handleWindowClosed","formData","FormData","append","response","post","credentials","data","access_token","localStorage","setItem","prev","type","e","_e$response","_e$response$data","alert","detail","fetchHubSpotContacts","console","log","error","sx","mt","children","display","alignItems","justifyContent","variant","onClick","undefined","color","disabled","style","pointerEvents","cursor","opacity","size","fileName","_jsxFileName","lineNumber","columnNumber","ml","_c","$RefreshReg$"],"sources":["/home/manasa/Projects/Assessment/automations_technical_assessment/integrations_technical_assessment/frontend/src/integrations/HubSpotIntegration.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Box, Button, CircularProgress } from \"@mui/material\";\nimport axios from \"axios\";\n\nconst HUBSPOT_CLIENT_ID = \"2a2b7459-db80-418e-9fc4-9961fc07c203\";\nconst REDIRECT_URI = \"http://localhost:8000/integrations/hubspot/callback\";\n\nexport const HubSpotIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\n    const [isConnected, setIsConnected] = useState(false);\n    const [isConnecting, setIsConnecting] = useState(false);\n\n    // Function to open OAuth authorization page\n    const handleConnectClick = () => {\n        const authUrl = `https://app.hubspot.com/oauth/authorize?client_id=${HUBSPOT_CLIENT_ID}&redirect_uri=${encodeURIComponent(REDIRECT_URI)}&scope=crm.objects.contacts.read%20crm.objects.contacts.write%20oauth`;\n        window.location.href = authUrl;\n    };\n\n    // Function to retrieve credentials after authentication\n    const handleWindowClosed = async () => {\n        try {\n            const formData = new FormData();\n            formData.append(\"user_id\", user);\n            formData.append(\"org_id\", org);\n            const response = await axios.post(\"http://localhost:8000/integrations/hubspot/credentials\", formData);\n            const credentials = response.data;\n\n            if (credentials?.access_token) {\n                localStorage.setItem(\"hubspot_token\", credentials.access_token); // Store token\n                setIsConnected(true);\n                setIntegrationParams((prev) => ({ ...prev, credentials: credentials, type: \"HubSpot\" }));\n            }\n        } catch (e) {\n            alert(e?.response?.data?.detail || \"Failed to retrieve HubSpot credentials\");\n        }\n    };\n\n    // Function to fetch HubSpot contacts\n    const fetchHubSpotContacts = async () => {\n        try {\n            const response = await axios.post(\"http://localhost:8000/integrations/hubspot/items\", { user, org });\n            console.log(\"HubSpot Contacts:\", response.data);\n        } catch (error) {\n            alert(\"Failed to fetch contacts. Please try again.\");\n        }\n    };\n\n    useEffect(() => {\n        setIsConnected(!!integrationParams?.credentials);\n    }, [integrationParams]);\n\n    return (\n        <Box sx={{ mt: 2 }}>\n            Parameters\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" sx={{ mt: 2 }}>\n                <Button\n                    variant=\"contained\"\n                    onClick={isConnected ? undefined : handleConnectClick}\n                    color={isConnected ? \"success\" : \"primary\"}\n                    disabled={isConnecting}\n                    style={{\n                        pointerEvents: isConnected ? \"none\" : \"auto\",\n                        cursor: isConnected ? \"default\" : \"pointer\",\n                        opacity: isConnected ? 1 : undefined,\n                    }}\n                >\n                    {isConnected ? \"HubSpot Connected\" : isConnecting ? <CircularProgress size={20} /> : \"Connect to HubSpot\"}\n                </Button>\n                {isConnected && (\n                    <Button variant=\"contained\" sx={{ ml: 2 }} onClick={fetchHubSpotContacts}>\n                        Fetch HubSpot Contacts\n                    </Button>\n                )}\n            </Box>\n        </Box>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}