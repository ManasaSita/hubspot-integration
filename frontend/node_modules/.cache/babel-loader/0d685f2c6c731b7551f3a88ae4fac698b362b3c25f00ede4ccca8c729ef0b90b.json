{"ast":null,"code":"var _jsxFileName = \"/home/manasa/Projects/Assessment/automations_technical_assessment/integrations_technical_assessment/frontend/src/integrations/HubSpotIntegration.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Box, Button, CircularProgress, List, ListItem, ListItemText } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HUBSPOT_CLIENT_ID = \"2a2b7459-db80-418e-9fc4-9961fc07c203\";\nconst REDIRECT_URI = \"http://localhost:8000/integrations/hubspot/callback\";\nexport const HubSpotIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [contacts, setContacts] = useState([]);\n\n  // Function to open OAuth authorization page\n  const handleConnectClick = () => {\n    const authUrl = `https://app.hubspot.com/oauth/authorize?client_id=${HUBSPOT_CLIENT_ID}&redirect_uri=${encodeURIComponent(REDIRECT_URI)}&scope=crm.objects.contacts.read%20crm.objects.contacts.write%20oauth`;\n    window.location.href = authUrl;\n  };\n\n  // Function to retrieve credentials after authentication\n  const handleWindowClosed = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:8000/integrations/hubspot/credentials\");\n      const credentials = response.data;\n      if (credentials !== null && credentials !== void 0 && credentials.access_token) {\n        localStorage.setItem(\"hubspot_token\", credentials.access_token); // Store token\n        setIsConnected(true);\n        setIntegrationParams(prev => ({\n          ...prev,\n          credentials: credentials,\n          type: \"HubSpot\"\n        }));\n      }\n    } catch (e) {\n      alert(\"Failed to retrieve HubSpot credentials\");\n    }\n  };\n\n  // Function to fetch HubSpot contacts\n  const fetchHubSpotContacts = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:8000/integrations/hubspot/items\");\n      setContacts(response.data);\n      console.log(\"HubSpot Contacts:\", response.data);\n    } catch (error) {\n      alert(\"Failed to fetch contacts. Please try again.\");\n    }\n  };\n  useEffect(() => {\n    // ✅ Check if redirected after authentication\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.get(\"hubspot_connected\") === \"true\") {\n      handleWindowClosed(); // Automatically fetch credentials\n      window.history.replaceState({}, document.title, \"/\"); // Remove query param from URL\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: isConnected ? undefined : handleConnectClick,\n        color: isConnected ? \"success\" : \"primary\",\n        disabled: isConnecting,\n        style: {\n          pointerEvents: isConnected ? \"none\" : \"auto\",\n          cursor: isConnected ? \"default\" : \"pointer\",\n          opacity: isConnected ? 1 : undefined\n        },\n        children: isConnected ? \"HubSpot Connected\" : isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 73\n        }, this) : \"Connect to HubSpot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), isConnected && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        sx: {\n          ml: 2\n        },\n        onClick: fetchHubSpotContacts,\n        children: \"Fetch HubSpot Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), contacts.length > 0 && /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        mt: 3,\n        width: \"100%\",\n        maxWidth: 500,\n        bgcolor: \"background.paper\"\n      },\n      children: contacts.map((contact, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: contact.name,\n          secondary: `${contact.email || \"No email\"} | ${contact.phone || \"No phone\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(HubSpotIntegration, \"25wyYKzqb+nGPqzzVTeCkNa4Cm8=\");\n_c = HubSpotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubSpotIntegration\");","map":{"version":3,"names":["useState","useEffect","Box","Button","CircularProgress","List","ListItem","ListItemText","axios","jsxDEV","_jsxDEV","HUBSPOT_CLIENT_ID","REDIRECT_URI","HubSpotIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","contacts","setContacts","handleConnectClick","authUrl","encodeURIComponent","window","location","href","handleWindowClosed","response","post","credentials","data","access_token","localStorage","setItem","prev","type","e","alert","fetchHubSpotContacts","console","log","error","urlParams","URLSearchParams","search","get","history","replaceState","document","title","sx","mt","children","display","alignItems","justifyContent","variant","onClick","undefined","color","disabled","style","pointerEvents","cursor","opacity","size","fileName","_jsxFileName","lineNumber","columnNumber","ml","length","width","maxWidth","bgcolor","map","contact","index","primary","name","secondary","email","phone","_c","$RefreshReg$"],"sources":["/home/manasa/Projects/Assessment/automations_technical_assessment/integrations_technical_assessment/frontend/src/integrations/HubSpotIntegration.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Box, Button, CircularProgress, List, ListItem, ListItemText } from \"@mui/material\";\nimport axios from \"axios\";\n\nconst HUBSPOT_CLIENT_ID = \"2a2b7459-db80-418e-9fc4-9961fc07c203\";\nconst REDIRECT_URI = \"http://localhost:8000/integrations/hubspot/callback\";\n\nexport const HubSpotIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\n    const [isConnected, setIsConnected] = useState(false);\n    const [isConnecting, setIsConnecting] = useState(false);\n    const [contacts, setContacts] = useState([]);\n\n    // Function to open OAuth authorization page\n    const handleConnectClick = () => {\n        const authUrl = `https://app.hubspot.com/oauth/authorize?client_id=${HUBSPOT_CLIENT_ID}&redirect_uri=${encodeURIComponent(REDIRECT_URI)}&scope=crm.objects.contacts.read%20crm.objects.contacts.write%20oauth`;\n        window.location.href = authUrl;\n    };\n\n    // Function to retrieve credentials after authentication\n    const handleWindowClosed = async () => {\n        try {\n            const response = await axios.post(\"http://localhost:8000/integrations/hubspot/credentials\");\n            const credentials = response.data;\n\n            if (credentials?.access_token) {\n                localStorage.setItem(\"hubspot_token\", credentials.access_token); // Store token\n                setIsConnected(true);\n                setIntegrationParams((prev) => ({ ...prev, credentials: credentials, type: \"HubSpot\" }));\n            }\n        } catch (e) {\n            alert(\"Failed to retrieve HubSpot credentials\");\n        }\n    };\n\n    // Function to fetch HubSpot contacts\n    const fetchHubSpotContacts = async () => {\n        try {\n            const response = await axios.post(\"http://localhost:8000/integrations/hubspot/items\");\n            setContacts(response.data);\n            console.log(\"HubSpot Contacts:\", response.data);\n        } catch (error) {\n            alert(\"Failed to fetch contacts. Please try again.\");\n        }\n    };\n\n    useEffect(() => {\n        // ✅ Check if redirected after authentication\n        const urlParams = new URLSearchParams(window.location.search);\n        if (urlParams.get(\"hubspot_connected\") === \"true\") {\n            handleWindowClosed();  // Automatically fetch credentials\n            window.history.replaceState({}, document.title, \"/\");  // Remove query param from URL\n        }\n    }, []);\n    \n    \n\n    return (\n        <Box sx={{ mt: 2 }}>\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" sx={{ mt: 2 }}>\n                <Button\n                    variant=\"contained\"\n                    onClick={isConnected ? undefined : handleConnectClick}\n                    color={isConnected ? \"success\" : \"primary\"}\n                    disabled={isConnecting}\n                    style={{\n                        pointerEvents: isConnected ? \"none\" : \"auto\",\n                        cursor: isConnected ? \"default\" : \"pointer\",\n                        opacity: isConnected ? 1 : undefined,\n                    }}\n                >\n                    {isConnected ? \"HubSpot Connected\" : isConnecting ? <CircularProgress size={20} /> : \"Connect to HubSpot\"}\n                </Button>\n                {isConnected && (\n                    <Button variant=\"contained\" sx={{ ml: 2 }} onClick={fetchHubSpotContacts}>\n                        Fetch HubSpot Contacts\n                    </Button>\n                )}\n            </Box>\n    \n            {/* ✅ Render Contacts */}\n            {contacts.length > 0 && (\n                <List sx={{ mt: 3, width: \"100%\", maxWidth: 500, bgcolor: \"background.paper\" }}>\n                    {contacts.map((contact, index) => (\n                        <ListItem key={index}>\n                            <ListItemText\n                                primary={contact.name}\n                                secondary={`${contact.email || \"No email\"} | ${contact.phone || \"No phone\"}`}\n                            />\n                        </ListItem>\n                    ))}\n                </List>\n            )}\n        </Box>\n    );\n    \n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}